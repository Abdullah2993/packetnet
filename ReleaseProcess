Generating release packages and updating source control (git)

- Check that the version set in AssemblyInfo.cs is correct for the next release
- Rebuild project
- Run the unit tests in Test/, they should all pass (or you should know why
  a given test isn't passing)
- Make sure all outstanding changes are checked in
- Tag trunk as the release, ex.
  git tag -a PacketDotNet_X_Y_Z
- Push tags to the server
  git push --tags
- Generate a changelog like 'git log PacketDotNet_X_Y_Z..PacketDotNet_X_Y_Z+1 > changes'
- Make sure ChangeLog has been updated to reflect this version ahead of the
  list of changes that are going into that release.
- Run make_src_release with the tag name and release name
- Run make_bin_release with the release name


Pushing changes out to the world
- Log into the sourceforge website and go to 'Project admin'->'File manager'
- Click on the PacketDotNet folder to expand it, left click on the gear icon next to 'PacketDotNet'
  and create a new folder with a name of the version, like '4.0.0'
- Left click on the new folder's gear icon and pick 'Upload here'
- Upload the release notes txt file
- Left click on the release notes textfile and check off 'Release note' and click on 'Save'
- Left click on the new folder's gear icon and upload the src and bin zip files
- Left click on the binary zip file and select the platforms, select all of them, select the
  release notes file that was just uploaded
- Left click on the source zip file and select the release notes file
